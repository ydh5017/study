<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.blog.mapper.PostMapper">
    <!-- 게시글 등록 -->
    <insert id="postAddProc" parameterType="PostVo" useGeneratedKeys="true" keyColumn="postSeq" keyProperty="postSeq">
        INSERT
        INTO
            POST
        (
            CATECODE,
            TITLE,
            CONTENT,
            WRITEID,
            WRITEDT
        )
        VALUES
            (
                #{cateCode},
                #{title},
                #{content},
                #{writeId},
                SYSDATE()
            )
    </insert>
    <!-- 게시글 리스트 가져오기 -->
    <select id="getPostList" parameterType="map" resultType="PostVO">
        SELECT
            POSTSEQ,
            CATECODE,
            (SELECT CATENAME FROM CATEGORY WHERE CATECODE = A.CATECODE) AS CATENAME,
            TITLE,
            CONTENT,
            VIEWS,
            LIKES,
            WRITEID,
            WRITEDT,
            CHGID,
            CHGDT,
            ISDELETED
        FROM POST AS A
        WHERE ISDELETED = 0
        AND CATECODE = #{cateCode}
        ORDER BY POSTSEQ DESC
        LIMIT #{startlist}, #{listsize}
    </select>
    <!-- 검색된 게시글 리스트 가져오기 -->
    <select id="getSearchList" parameterType="map" resultType="PostVO">
        SELECT
            POSTSEQ,
            CATECODE,
            (SELECT CATENAME FROM CATEGORY WHERE CATECODE = A.CATECODE) AS CATENAME,
            TITLE,
            CONTENT,
            VIEWS,
            LIKES,
            WRITEID,
            WRITEDT,
            CHGID,
            CHGDT,
            ISDELETED
        FROM POST AS A
        WHERE ${type} LIKE '%${keyword}%'
            AND ISDELETED = 0
          AND CATECODE = #{cateCode}
        ORDER BY POSTSEQ DESC
            LIMIT #{startlist}, #{listsize}
    </select>
    <!-- 인기글 리스트 가져오기 -->
    <select id="getPopularPost" parameterType="map" resultType="PostVO">
        SELECT
            A.POSTSEQ,
            A.CATECODE,
            (SELECT CATENAME FROM CATEGORY WHERE CATECODE = A.CATECODE) AS CATENAME,
            A.TITLE,
            A.CONTENT,
            A.VIEWS,
            A.LIKES,
            A.WRITEID,
            A.WRITEDT,
            A.CHGID,
            A.CHGDT,
            A.ISDELETED
        FROM
            <choose>
                <when test="postType == 'week'">
                    (SELECT * FROM POST WHERE WRITEDT >= TO_CHAR(SYSDATE(),'YYYYMMDD' )-7) A
                </when>
                <when test="postType == 'day'">
                    (SELECT * FROM POST WHERE WRITEDT >= TO_CHAR(SYSDATE(),'YYYYMMDD' )) A
                </when>
                <otherwise>
                    (SELECT * FROM POST WHERE WRITEDT >= TO_CHAR(SYSDATE(),'YYYYMMDD' )-7) A
                </otherwise>
            </choose>
        WHERE A.ISDELETED = 0
          <if test="cateCode != '100'">
              AND A.CATECODE = #{cateCode}
          </if>
        ORDER BY A.LIKES DESC, A.WRITEDT DESC
        <choose>
            <when test="startlist != null">
                LIMIT #{startlist}, #{listsize}
            </when>
            <otherwise>
                LIMIT 0, 10
            </otherwise>
        </choose>
    </select>
    <!-- 마이페이지 게시글 리스트 가져오기 -->
    <select id="getMypagePost" parameterType="map" resultType="PostVO">
        SELECT
            POSTSEQ,
            CATECODE,
            (SELECT CATENAME FROM CATEGORY WHERE CATECODE = A.CATECODE) AS CATENAME,
            TITLE,
            CONTENT,
            VIEWS,
            LIKES,
            WRITEID,
            WRITEDT,
            CHGID,
            CHGDT,
            ISDELETED
        FROM POST AS A
        WHERE ISDELETED = 0
        <choose>
            <when test="mypageType == 'writePost' || postType == 'writePost'">
                AND WRITEID = #{userId}
            </when>
            <when test="mypageType == 'likePost' || postType == 'likePost'">
                <choose>
                    <when test="!likeInfo.isEmpty()">
                        AND POSTSEQ IN
                        <foreach collection="likeInfo" item="item" open="(" close=")" separator=",">
                            #{item.postSeq}
                        </foreach>
                    </when>
                    <otherwise>
                        AND POSTSEQ IN (0)
                    </otherwise>
                </choose>
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="cateCode != '100'">
                AND CATECODE = #{cateCode}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        ORDER BY POSTSEQ DESC
        <choose>
            <when test="postType == 'writePost' || postType == 'likePost'">
                LIMIT #{startlist}, #{listsize}
            </when>
            <otherwise>
                LIMIT 0, 10
            </otherwise>
        </choose>
    </select>
    <!-- 게시글 가져오기 -->
    <select id="postDetail" parameterType="int" resultType="PostVO">
        SELECT
            POSTSEQ,
            TITLE,
            CONTENT,
            VIEWS,
            LIKES,
            WRITEID,
            WRITEDT,
            CHGID,
            CHGDT,
            ISDELETED
        FROM POST
        WHERE POSTSEQ = #{postSeq}
    </select>
    <!-- 총 게시글 수 조회 -->
    <select id="postCount" resultType="integer">
        SELECT COUNT(0)
        FROM POST
        WHERE ISDELETED = 0
        <if test="cateCode != '100'">
            AND CATECODE = #{cateCode}
        </if>
    </select>
    <!-- 검색된 게시글 수 조회 -->
    <select id="searchCount" resultType="integer">
        SELECT COUNT(0)
        FROM POST
        WHERE ${type} LIKE '%${keyword}%'
          AND ISDELETED = 0
        <if test="cateCode != '100'">
            AND CATECODE = #{cateCode}
        </if>
    </select>
    <!-- 인기글 수 조회 -->
    <select id="popularCount" resultType="integer">
        SELECT COUNT(0)
        FROM
            <choose>
                <when test="postType == 'week'">
                    (SELECT * FROM POST WHERE WRITEDT >= TO_CHAR(SYSDATE(),'YYYYMMDD' )-7) A
                </when>
                <when test="postType == 'day'">
                    (SELECT * FROM POST WHERE WRITEDT >= TO_CHAR(SYSDATE(),'YYYYMMDD' )) A
                </when>
                <otherwise>
                    POST AS A
                </otherwise>
            </choose>
        WHERE A.ISDELETED = 0
        <if test="cateCode != '100'">
            AND A.CATECODE = #{cateCode}
        </if>
    </select>
    <!-- 마이페이지 작성한 게시글 수 조회 -->
    <select id="mypageCount" resultType="integer">
        SELECT COUNT(0)
        FROM POST
        WHERE ISDELETED = 0
        <choose>
            <when test="postType == 'writePost'">
                AND WRITEID = #{userId}
            </when>
            <when test="postType == 'likePost'  and !likeInfo.isEmpty()">
                AND POSTSEQ IN
                <foreach collection="likeInfo" item="item" open="(" close=")" separator=",">
                    #{item.postSeq}
                </foreach>
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <if test="cateCode != '100'">
            AND CATECODE = #{cateCode}
        </if>
    </select>
    <!-- 조회수 증가 -->
    <update id="viewIncrease" parameterType="map">
        UPDATE
            POST
        SET
            VIEWS = VIEWS + 1
        WHERE
            POSTSEQ = #{postSeq}
    </update>
    <!-- 게시글 삭제 -->
    <update id="postDelete" parameterType="map">
        UPDATE
        POST
        SET
        ISDELETED = 1
        WHERE
        POSTSEQ = #{postSeq}
        <selectKey keyProperty="cateCode" resultType="int" order="AFTER">
            select cateCode from post where postSeq = #{postSeq}
        </selectKey>
    </update>
    <!-- 게시글 수정 -->
    <update id="postModProc" parameterType="PostVO">
        UPDATE
            POST
        SET
            TITLE = #{title},
            CONTENT = #{content},
            CHGID =#{chgId},
            CHGDT = SYSDATE()
        WHERE
            POSTSEQ = #{postSeq}
    </update>
    <!-- 좋아요 up -->
    <update id="likeInc" parameterType="map">
        UPDATE
            POST
        SET
            LIKES = LIKES + 1
        WHERE
            POSTSEQ = #{postSeq}
    </update>
    <!-- 좋아요 down -->
    <update id="likeDec" parameterType="map">
        UPDATE
            POST
        SET
            LIKES = LIKES - 1
        WHERE
            POSTSEQ = #{postSeq}
    </update>
</mapper>